# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/site-oncase
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: site-oncase
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: site-oncase
          POSTGRES_DB: site-oncase_test
          POSTGRES_PASSWORD: ""
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
      #       bundle exec rspec --format progress \
      #                       --format RspecJunitFormatter \
      #                       --out /tmp/test-results/rspec.xml \
      #                       --format progress \
      #                       $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: Fix ssh Could not resolve hostname
          command: |
            cat >~/.netrc <<EOF
            machine $SSH_HOST
              login $SSH_USER
              password $SSH_PASS
            EOF

      - add_ssh_keys: # add private SSH key from CircleCI account based on fingerprint.
          fingerprints:
            - "54:ae:51:73:a1:38:f7:fe:2f:f8:e0:da:05:5f:9a:35"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST 'rvm use ruby-2.5.0@oncase'
            ssh $SSH_USER@$SSH_HOST 'cd oncase.com.br'
            ssh $SSH_USER@$SSH_HOST 'git pull'
            ssh $SSH_USER@$SSH_HOST 'RAILS_ENV=production rails assets:precompile'
            ssh $SSH_USER@$SSH_HOST 'RAILS_ENV=production rails rails db:migrate'
            ssh $SSH_USER@$SSH_HOST "touch 'tmp/restart.txt'"
            
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master